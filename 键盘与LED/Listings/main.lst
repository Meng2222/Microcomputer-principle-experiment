C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "HD7279.h"
   2          #include "delay.h"
   3          #include "main.h"
   4          
   5          #ifndef DATA_MEMORY_TEST
   6          
   7          #include "basicIO.h"
   8          #include "decode.h"
   9          #include "p1IO.h"
  10          #include "timer.h"
  11          
  12          #endif
  13          
  14          #ifdef DATA_MEMORY_TEST
              
              #include "dataMemory.h"
              
              #endif
  19          
  20          //数码管显示状态枚举变量
  21          typedef enum
  22          {
  23                  rollingLeft,
  24                  rollingRight,
  25                  showKeyNumTogether,
  26                  inputRoll2Left,
  27                  idle
  28          }ledStatus_t;
  29          
  30          //程序运行状态枚举变量
  31          typedef enum
  32          {
  33                  keyLed,
  34                  basicIO,
  35                  decode,
  36                  p1IO,
  37                  dataMemory,
  38                  timerExp,
  39                  statusIdle
  40          }status_t;
  41          
  42          //P1IO输出状态枚举变量
  43          typedef enum
  44          {
  45                  blinkIn4,
  46                  flow,
  47                  showInput,
  48                  p1Idle
  49          }p1IOStatus_t;
  50          
  51          typedef enum
  52          {
  53                  timerExp1,
  54                  timerExp2,
C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 2   

  55                  timerExp3       
  56          }timerStatus_t;
  57          
  58          
  59          void main(void)
  60          {
  61   1      #ifndef DATA_MEMORY_TEST
  62   1      //数码管滚动显示的周期
  63   1      #define ROLL_PERIOD (15)
  64   1              ledStatus_t idata ledStatus = inputRoll2Left;
  65   1              status_t idata status = timerExp;
  66   1              p1IOStatus_t idata p1IOStatus = flow;
  67   1              timerStatus_t idata timerStatus = timerExp1;
  68   1              unsigned char i,j = 0;
  69   1              //按键状态，没有按下时为0xff，按下时为按下按键的编号
  70   1              unsigned char keyState = 0;
  71   1              unsigned char rollPeriod = ROLL_PERIOD;
  72   1              //按键是否按下标志位
  73   1              unsigned char keyFlag = 0;
  74   1              //简单IO输入值
  75   1              unsigned char ioInput = 0;
  76   1              //译码实验输出用变量
  77   1              unsigned char ioOutput = 0;
  78   1              //译码实验闪烁计时变量
  79   1              unsigned short timeCounter = 0;
  80   1              
  81   1              timeMode_t timeMode ={0};
  82   1              
  83   1              timeMode.isGateCrl = noGateCrl;
  84   1              timeMode.timeWorkMode = timer;
  85   1              timeMode.timeTriggerMode = innerTrigger;
  86   1              timeMode.timerMode = halfWordAutoReload;
  87   1              
  88   1              TimeInit(TIM0 , timeMode ,200, 3);
  89   1              
  90   1              timeMode.isGateCrl = noGateCrl;
  91   1              timeMode.timeWorkMode = counter;
  92   1              timeMode.timeTriggerMode = outerTrigger;
  93   1              timeMode.timerMode = byteAutoReload;    
  94   1              TimeInit(TIM1 , timeMode ,0, 3);
  95   1              TimerCmd(TIM1 ,timeMode, disable);
  96   1              TH1 = 0xfb;
  97   1              TL1 = 0xfb;
  98   1              TimerCmd(TIM1 ,timeMode,enable);
  99   1      
 100   1      //      //将HD7279对应引脚全部拉低
 101   1      //      P1 = 0x00;
 102   1              
 103   1      //      DelayMs(25);
 104   1              
 105   1      //      for(j = 0 ; j < 10 ; j++)
 106   1      //      {
 107   1      //      for(i = 0 ; i < 8 ; i++)
 108   1      //      {
 109   1      //              LedWrite(0x97 - i, realCode[8 - i]);
 110   1      //      }
 111   1      //      DelayMs(250);
 112   1      //      }
 113   1              while(1)
 114   1              {
 115   2      //              DelayMs(20);
 116   2                      
C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 3   

 117   2                      switch(status)
 118   2                      {
 119   3                              //按键和LED
 120   3                              case keyLed:
 121   3                              {
 122   4                                      
 123   4                                      //读取按键状态
 124   4                                      keyState = KeyRead();
 125   4      
 126   4                                      switch(ledStatus)
 127   4                                      {
 128   5                                              //向左滚动
 129   5                                              case rollingLeft:
 130   5                                                      //没有按键按下时循环向左滚动
 131   5                                                      if(keyState==0xff)
 132   5                                                      {
 133   6                                                              rollPeriod--;
 134   6                                                              if(rollPeriod == 0)
 135   6                                                              {
 136   7                                                                      rollPeriod = ROLL_PERIOD;
 137   7                                                                      HD7279SendByte(RTL_CYCLE);
 138   7                                                              }
 139   6                                                      }
 140   5                                                      //按下KEY10后进入一同显示数字状态
 141   5                                                      else if(keyState == KEY10)
 142   5                                                      {
 143   6                                                              rollPeriod = ROLL_PERIOD;
 144   6                                                              HD7279SendByte(CMD_RESET);
 145   6                                                              ledStatus = showKeyNumTogether;
 146   6                                                      }
 147   5                                              break;
 148   5                                              //循环向右滚动
 149   5                                              case rollingRight:
 150   5                                                      //没有按键按下时循环向右滚动
 151   5                                                      if(keyState == 0xff)
 152   5                                                      {
 153   6                                                              rollPeriod--;
 154   6                                                              if(rollPeriod == 0)
 155   6                                                              {
 156   7                                                                      rollPeriod = ROLL_PERIOD;
 157   7                                                                      HD7279SendByte(RTR_CYCLE);
 158   7                                                              }
 159   6                                                      }
 160   5                                                      //按下KEY10时进入一同显示按下数字状态
 161   5                                                      else if(keyState == KEY10)
 162   5                                                      {
 163   6                                                              rollPeriod = ROLL_PERIOD;
 164   6                                                              HD7279SendByte(CMD_RESET);
 165   6                                                              ledStatus = showKeyNumTogether;                         
 166   6                                                      }
 167   5                                              break;
 168   5                                              //所有数码管一同显示按下按键对应数字
 169   5                                              case showKeyNumTogether:
 170   5                                                      switch(keyState)
 171   5                                                      {
 172   6                                                              case KEY0:
 173   6                                                                      for(i = 0 ; i < 8 ; i++)
 174   6                                                                      {
 175   7                                                                              LedWrite(0x97 - i, realCode[0]);
 176   7                                                                      }
 177   6                                                              break;
 178   6                                                              case KEY1:
C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 4   

 179   6                                                                      for(i = 0 ; i < 8 ; i++)
 180   6                                                                      {
 181   7                                                                              LedWrite(0x97 - i, realCode[1]);
 182   7                                                                      }
 183   6                                                              break;
 184   6                                                              case KEY2:
 185   6                                                                      for(i = 0 ; i < 8 ; i++)
 186   6                                                                      {
 187   7                                                                              LedWrite(0x97 - i, realCode[2]);
 188   7                                                                      }
 189   6                                                              break;
 190   6                                                              case KEY3:
 191   6                                                                      for(i = 0 ; i < 8 ; i++)
 192   6                                                                      {
 193   7                                                                              LedWrite(0x97 - i, realCode[3]);
 194   7                                                                      }
 195   6                                                              break;
 196   6                                                              case KEY4:
 197   6                                                                      for(i = 0 ; i < 8 ; i++)
 198   6                                                                      {
 199   7                                                                              LedWrite(0x97 - i, realCode[4]);
 200   7                                                                      }                                       
 201   6                                                              break;
 202   6                                                              case KEY5:
 203   6                                                                      for(i = 0 ; i < 8 ; i++)
 204   6                                                                      {
 205   7                                                                              LedWrite(0x97 - i, realCode[5]);
 206   7                                                                      }                                       
 207   6                                                              break;
 208   6                                                              case KEY6:
 209   6                                                                      for(i = 0 ; i < 8 ; i++)
 210   6                                                                      {
 211   7                                                                              LedWrite(0x97 - i, realCode[6]);
 212   7                                                                      }                                       
 213   6                                                              break;
 214   6                                                              case KEY7:
 215   6                                                                      for(i = 0 ; i < 8 ; i++)
 216   6                                                                      {
 217   7                                                                              LedWrite(0x97 - i, realCode[7]);
 218   7                                                                      }                                       
 219   6                                                              break;
 220   6                                                              case KEY8:
 221   6                                                                      for(i = 0 ; i < 8 ; i++)
 222   6                                                                      {
 223   7                                                                              LedWrite(0x97 - i, realCode[8]);
 224   7                                                                      }                                       
 225   6                                                              break;
 226   6                                                              case KEY9:
 227   6                                                                      for(i = 0 ; i < 8 ; i++)
 228   6                                                                      {
 229   7                                                                              LedWrite(0x97 - i, realCode[9]);
 230   7                                                                      }                                       
 231   6                                                              break;
 232   6                                                              default:
 233   6                                                              break;
 234   6                                                      }       
 235   5                                              break;
 236   5                                                      //每次按键时不循环左移并显示按键对应的数字
 237   5                                              case inputRoll2Left:
 238   5                                                      if(keyState!=0xff&&keyFlag==0)
 239   5                                                      {
 240   6                                                              HD7279SendByte(RTL_UNCYL);
C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 5   

 241   6                                                              switch(keyState)
 242   6                                                              {
 243   7                                                                      case KEY0:
 244   7                                                                              LedWrite(LED1, realCode[0]);
 245   7                                                                      break;
 246   7                                                                      case KEY1:
 247   7                                                                              LedWrite(LED1, realCode[1]);
 248   7                                                                      break;
 249   7                                                                      case KEY2:
 250   7                                                                              LedWrite(LED1, realCode[2]);
 251   7                                                                      break;
 252   7                                                                      case KEY3:
 253   7                                                                              LedWrite(LED1, realCode[3]);
 254   7                                                                      break;
 255   7                                                                      case KEY4:
 256   7                                                                              LedWrite(LED1, realCode[4]);
 257   7                                                                      break;
 258   7                                                                      case KEY5:
 259   7                                                                              LedWrite(LED1, realCode[5]);
 260   7                                                                      break;
 261   7                                                                      case KEY6:
 262   7                                                                              LedWrite(LED1, realCode[6]);
 263   7                                                                      break;
 264   7                                                                      case KEY7:
 265   7                                                                              LedWrite(LED1, realCode[7]);
 266   7                                                                      break;
 267   7                                                                      case KEY8:
 268   7                                                                              LedWrite(LED1, realCode[8]);
 269   7                                                                      break;
 270   7                                                                      case KEY9:
 271   7                                                                              LedWrite(LED1, realCode[9]);
 272   7                                                                      break;
 273   7                                                                      default:
 274   7                                                                      break;
 275   7                                                              }
 276   6                                                              keyFlag = 1;
 277   6                                                      }
 278   5                                                      if(keyState == 0xff&&keyFlag == 1)
 279   5                                                      {
 280   6                                                              keyFlag = 0;
 281   6                                                      }
 282   5                                                              
 283   5                                              break;
 284   5                                              //空闲状态
 285   5                                              case idle:
 286   5                                                      
 287   5                                              break;
 288   5                                              default:
 289   5                                              break;
 290   5                                      }
 291   4                              break;
 292   4                              }
 293   3                              //简单IO实验
 294   3                              case basicIO:
 295   3                              {       
 296   4                                      //从74LS245地址读取简单IO输入
 297   4                                      ioInput = chip245Adress;
 298   4                              
 299   4                                      //将简单IO输入输出到74LS374
 300   4                                      chip374Adress = ~ioInput;
 301   4                              
 302   4                                      //在数码管上显示简单IO输入状态
C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 6   

 303   4                                      for(i = 0 ; i < 8 ; i++)
 304   4                                      {
 305   5                                              if((ioInput>>i)&0x01)
 306   5                                              {
 307   6                                                      LedWrite(0x97 - 7 + i, realCode[1]);
 308   6                                              }
 309   5                                              else
 310   5                                              {
 311   6                                                      LedWrite(0x97 - 7 + i, realCode[0]);
 312   6                                              }
 313   5                                      }
 314   4                                      
 315   4                              break;
 316   4                              }
 317   3                              //译码器实验
 318   3                              case decode:
 319   3                              {
 320   4                                      timeCounter++;
 321   4                                      timeCounter%=20;
 322   4                                      if(timeCounter/10)
 323   4                                      {
 324   5                                              decodeAdress1 = ioOutput;
 325   5                                      }
 326   4                                      else
 327   4                                      {
 328   5                                              decodeAdress2 = ioOutput;
 329   5                                      }
 330   4                              
 331   4                              break;
 332   4                              }
 333   3                              //P1IO口实验
 334   3                              case p1IO:
 335   3                              {
 336   4                                      switch(p1IOStatus)
 337   4                                      {
 338   5                                              //四个一组循环闪烁
 339   5                                              case blinkIn4:
 340   5                                                      BlinkIn4(500);
 341   5                                              break;
 342   5                                              //流水灯
 343   5                                              case flow:
 344   5                                                      Flow(500);
 345   5                                              break;
 346   5                                              //将P10~P13输入输出到P14~P17，用输入控制LED的亮灭
 347   5                                              case showInput:
 348   5                                                      ShowInput();
 349   5                                              break;
 350   5                                              case p1Idle:
 351   5                                              break;
 352   5                                              default:
 353   5                                              break;
 354   5                                      }
 355   4                              break;
 356   4                              }
 357   3                              case dataMemory:
 358   3                                      
 359   3                              break;
 360   3                              case timerExp:
 361   3                              {
 362   4                                      switch(timerStatus)
 363   4                                      {
 364   5                                              case timerExp1:
C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 7   

 365   5                                                      if(TimerGetOverFlowITFlag(TIM0))
 366   5                                                      {
 367   6                                                              P10=!P10;
 368   6                                                              TimerClearOverFlowFlag(TIM0);
 369   6                                                      }
 370   5                                              break;
 371   5                                              case timerExp2:
 372   5                                                      {
 373   6                                                              if(TimerGetOverFlowITFlag(TIM1))
 374   6                                                              {
 375   7                                                                      P10=!P10;
 376   7                                                                      TimerClearOverFlowFlag(TIM1);
 377   7                                                              }                                                       
 378   6                                                      }
 379   5                                              break;
 380   5                                              case timerExp3:
 381   5                                              break;
 382   5                                      }
 383   4                              break;
 384   4                              }
 385   3                              case statusIdle:
 386   3                              break;
 387   3                              default:
 388   3                              break;
 389   3                      }
 390   2      
 391   2              }
 392   1      #endif
 393   1      #ifdef DATA_MEMORY_TEST
                      unsigned char i = 0;
                      P1 = 0x00;
                      DelayMs(20);
                      while(1)
                      {
                              AUXR = 0x8e;
                              for(i = 0 ; i < DIRECT_ACCESS_SIZE;i++)
                              {
                                      directAccess[i] = i;
                                      LEDShowInt(directAccess[i]);
                                      DelayMs(300);
                              }
                              for(i = 0; i< BIT_ACCESS_SIZE ; i++)
                              {
                                      bitAccess[i] = 255 - i;
                                      LEDShowInt(bitAccess[i]);
                                      DelayMs(300);           
                              }
                              for(i = 0; i< INDIRECT_ACCESS_SIZE ; i++)
                              {
                                      indirectAccess[i] = 128 + i;
                                      LEDShowInt(indirectAccess[i]);
                                      DelayMs(300);           
                              }
                              for(i = 0; i< PAGE_ACCESS_SIZE ; i++)
                              {
                                      pageAccess[i] = i;
                                      LEDShowInt(pageAccess[i]);
                                      DelayMs(300);           
                              }
                              
                              for(i = 0; i< OUTER_MEM_IN_MCU_SIZE ; i++)
                              {
C51 COMPILER V9.56.0.0   MAIN                                                              10/09/2017 18:19:15 PAGE 8   

                                      outerMemInMCU[i] = i;
                                      LEDShowInt(outerMemInMCU[i]);
                                      DelayMs(300);           
                              }
              
                              AUXR = 0x02;
                              for(i = 0; i< OUTER_EXTEND_MEM_SIZE ; i++)
                              {
                                      outerExtendMem[i] = 128 - i;
                                      LEDShowInt(outerExtendMem[i]);
                                      DelayMs(300);           
                              }               
                      }               
              #endif
 441   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1021    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----       4
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
