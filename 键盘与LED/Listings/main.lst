C51 COMPILER V9.56.0.0   MAIN                                                              09/25/2017 18:09:40 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "HD7279.h"
   2          #include "delay.h"
   3          #include "main.h"
   4          
   5          #ifndef DATA_MEMORY_TEST
              
              #include "basicIO.h"
              #include "decode.h"
              #include "p1IO.h"
              
              #endif
  12          
  13          #ifdef DATA_MEMORY_TEST
  14          
  15          #include "dataMemory.h"
  16          
  17          #endif
  18          
  19          //数码管显示状态枚举变量
  20          typedef enum
  21          {
  22                  rollingLeft,
  23                  rollingRight,
  24                  showKeyNumTogether,
  25                  inputRoll2Left,
  26                  idle
  27          }ledStatus_t;
  28          
  29          //程序运行状态枚举变量
  30          typedef enum
  31          {
  32                  keyLed,
  33                  basicIO,
  34                  decode,
  35                  p1IO,
  36                  dataMemory,
  37                  statusIdle
  38          }status_t;
  39          
  40          //P1IO输出状态枚举变量
  41          typedef enum
  42          {
  43                  blinkIn4,
  44                  flow,
  45                  showInput,
  46                  p1Idle
  47          }p1IOStatus_t;
  48          
  49          void main(void)
  50          {
  51   1      #ifndef DATA_MEMORY_TEST
              //数码管滚动显示的周期
              #define ROLL_PERIOD (15)
                      ledStatus_t ledStatus = inputRoll2Left;
C51 COMPILER V9.56.0.0   MAIN                                                              09/25/2017 18:09:40 PAGE 2   

                      status_t status = p1IO;
                      p1IOStatus_t p1IOStatus = flow;
                      unsigned char i,j = 0;
                      //按键状态，没有按下时为0xff，按下时为按下按键的编号
                      unsigned char keyState = 0;
                      unsigned char rollPeriod = ROLL_PERIOD;
                      //按键是否按下标志位
                      unsigned char keyFlag = 0;
                      //简单IO输入值
                      unsigned char ioInput = 0;
                      //译码实验输出用变量
                      unsigned char ioOutput = 0;
                      //译码实验闪烁计时变量
                      unsigned short timeCounter = 0;
              
              //      //将HD7279对应引脚全部拉低
              //      P1 = 0x00;
                      
                      DelayMs(25);
                      
              //      for(j = 0 ; j < 10 ; j++)
              //      {
              //      for(i = 0 ; i < 8 ; i++)
              //      {
              //              LedWrite(0x97 - i, realCode[8 - i]);
              //      }
              //      DelayMs(250);
              //      }
                      while(1)
                      {
                              DelayMs(20);
                              
                              switch(status)
                              {
                                      //按键和LED
                                      case keyLed:
                                              
                                              //读取按键状态
                                              keyState = KeyRead();
              
                                              switch(ledStatus)
                                              {
                                                      //向左滚动
                                                      case rollingLeft:
                                                              //没有按键按下时循环向左滚动
                                                              if(keyState==0xff)
                                                              {
                                                                      rollPeriod--;
                                                                      if(rollPeriod == 0)
                                                                      {
                                                                              rollPeriod = ROLL_PERIOD;
                                                                              HD7279SendByte(RTL_CYCLE);
                                                                      }
                                                              }
                                                              //按下KEY10后进入一同显示数字状态
                                                              else if(keyState == KEY10)
                                                              {
                                                                      rollPeriod = ROLL_PERIOD;
                                                                      HD7279SendByte(CMD_RESET);
                                                                      ledStatus = showKeyNumTogether;
                                                              }
                                                      break;
C51 COMPILER V9.56.0.0   MAIN                                                              09/25/2017 18:09:40 PAGE 3   

                                                      //循环向右滚动
                                                      case rollingRight:
                                                              //没有按键按下时循环向右滚动
                                                              if(keyState == 0xff)
                                                              {
                                                                      rollPeriod--;
                                                                      if(rollPeriod == 0)
                                                                      {
                                                                              rollPeriod = ROLL_PERIOD;
                                                                              HD7279SendByte(RTR_CYCLE);
                                                                      }
                                                              }
                                                              //按下KEY10时进入一同显示按下数字状态
                                                              else if(keyState == KEY10)
                                                              {
                                                                      rollPeriod = ROLL_PERIOD;
                                                                      HD7279SendByte(CMD_RESET);
                                                                      ledStatus = showKeyNumTogether;                         
                                                              }
                                                      break;
                                                      //所有数码管一同显示按下按键对应数字
                                                      case showKeyNumTogether:
                                                              switch(keyState)
                                                              {
                                                                      case KEY0:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[0]);
                                                                              }
                                                                      break;
                                                                      case KEY1:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[1]);
                                                                              }
                                                                      break;
                                                                      case KEY2:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[2]);
                                                                              }
                                                                      break;
                                                                      case KEY3:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[3]);
                                                                              }
                                                                      break;
                                                                      case KEY4:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[4]);
                                                                              }                                       
                                                                      break;
                                                                      case KEY5:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[5]);
                                                                              }                                       
                                                                      break;
                                                                      case KEY6:
                                                                              for(i = 0 ; i < 8 ; i++)
C51 COMPILER V9.56.0.0   MAIN                                                              09/25/2017 18:09:40 PAGE 4   

                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[6]);
                                                                              }                                       
                                                                      break;
                                                                      case KEY7:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[7]);
                                                                              }                                       
                                                                      break;
                                                                      case KEY8:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[8]);
                                                                              }                                       
                                                                      break;
                                                                      case KEY9:
                                                                              for(i = 0 ; i < 8 ; i++)
                                                                              {
                                                                                      LedWrite(0x97 - i, realCode[9]);
                                                                              }                                       
                                                                      break;
                                                                      default:
                                                                      break;
                                                              }       
                                                      break;
                                                              //每次按键时不循环左移并显示按键对应的数字
                                                      case inputRoll2Left:
                                                              if(keyState!=0xff&&keyFlag==0)
                                                              {
                                                                      HD7279SendByte(RTL_UNCYL);
                                                                      switch(keyState)
                                                                      {
                                                                              case KEY0:
                                                                                      LedWrite(LED1, realCode[0]);
                                                                              break;
                                                                              case KEY1:
                                                                                      LedWrite(LED1, realCode[1]);
                                                                              break;
                                                                              case KEY2:
                                                                                      LedWrite(LED1, realCode[2]);
                                                                              break;
                                                                              case KEY3:
                                                                                      LedWrite(LED1, realCode[3]);
                                                                              break;
                                                                              case KEY4:
                                                                                      LedWrite(LED1, realCode[4]);
                                                                              break;
                                                                              case KEY5:
                                                                                      LedWrite(LED1, realCode[5]);
                                                                              break;
                                                                              case KEY6:
                                                                                      LedWrite(LED1, realCode[6]);
                                                                              break;
                                                                              case KEY7:
                                                                                      LedWrite(LED1, realCode[7]);
                                                                              break;
                                                                              case KEY8:
                                                                                      LedWrite(LED1, realCode[8]);
                                                                              break;
                                                                              case KEY9:
                                                                                      LedWrite(LED1, realCode[9]);
C51 COMPILER V9.56.0.0   MAIN                                                              09/25/2017 18:09:40 PAGE 5   

                                                                              break;
                                                                              default:
                                                                              break;
                                                                      }
                                                                      keyFlag = 1;
                                                              }
                                                              if(keyState == 0xff&&keyFlag == 1)
                                                              {
                                                                      keyFlag = 0;
                                                              }
                                                                      
                                                      break;
                                                      //空闲状态
                                                      case idle:
                                                              
                                                      break;
                                                      default:
                                                      break;
                                              }
                                      break;
                                      //简单IO实验
                                      case basicIO:
                                              
                                              //从74LS245地址读取简单IO输入
                                              ioInput = chip245Adress;
                                      
                                              //将简单IO输入输出到74LS374
                                              chip374Adress = ~ioInput;
                                      
                                              //在数码管上显示简单IO输入状态
                                              for(i = 0 ; i < 8 ; i++)
                                              {
                                                      if((ioInput>>i)&0x01)
                                                      {
                                                              LedWrite(0x97 - 7 + i, realCode[1]);
                                                      }
                                                      else
                                                      {
                                                              LedWrite(0x97 - 7 + i, realCode[0]);
                                                      }
                                              }
                                              
                                      break;
                                      //译码器实验
                                      case decode:
                                              timeCounter++;
                                              timeCounter%=20;
                                              if(timeCounter/10)
                                              {
                                                      decodeAdress1 = ioOutput;
                                              }
                                              else
                                              {
                                                      decodeAdress2 = ioOutput;
                                              }
                                      
                                      break;
                                      //P1IO口实验
                                      case p1IO:
                                              switch(p1IOStatus)
                                              {
                                                      //四个一组循环闪烁
C51 COMPILER V9.56.0.0   MAIN                                                              09/25/2017 18:09:40 PAGE 6   

                                                      case blinkIn4:
                                                              BlinkIn4(500);
                                                      break;
                                                      //流水灯
                                                      case flow:
                                                              Flow(500);
                                                      break;
                                                      //将P10~P13输入输出到P14~P17，用输入控制LED的亮灭
                                                      case showInput:
                                                              ShowInput();
                                                      break;
                                                      case p1Idle:
                                                      break;
                                                      default:
                                                      break;
                                              }
                                      break;
                                      case dataMemory:
                                              
                                      break;          
                                      case statusIdle:
                                      break;
                                      default:
                                      break;
                              }
              
                      }
              #endif
 331   1      #ifdef DATA_MEMORY_TEST
 332   1              unsigned char i = 0;
 333   1              P1 = 0x00;
 334   1              DelayMs(20);
 335   1              while(1)
 336   1              {
 337   2                      AUXR = 0x8e;
 338   2                      for(i = 0 ; i < DIRECT_ACCESS_SIZE;i++)
 339   2                      {
 340   3                              directAccess[i] = i;
 341   3                              LEDShowInt(directAccess[i]);
 342   3                              DelayMs(300);
 343   3                      }
 344   2                      for(i = 0; i< BIT_ACCESS_SIZE ; i++)
 345   2                      {
 346   3                              bitAccess[i] = 255 - i;
 347   3                              LEDShowInt(bitAccess[i]);
 348   3                              DelayMs(300);           
 349   3                      }
 350   2                      for(i = 0; i< INDIRECT_ACCESS_SIZE ; i++)
 351   2                      {
 352   3                              indirectAccess[i] = 128 + i;
 353   3                              LEDShowInt(indirectAccess[i]);
 354   3                              DelayMs(300);           
 355   3                      }
 356   2                      for(i = 0; i< PAGE_ACCESS_SIZE ; i++)
 357   2                      {
 358   3                              pageAccess[i] = i;
 359   3                              LEDShowInt(pageAccess[i]);
 360   3                              DelayMs(300);           
 361   3                      }
 362   2                      
 363   2                      for(i = 0; i< OUTER_MEM_IN_MCU_SIZE ; i++)
 364   2                      {
C51 COMPILER V9.56.0.0   MAIN                                                              09/25/2017 18:09:40 PAGE 7   

 365   3                              outerMemInMCU[i] = i;
 366   3                              LEDShowInt(outerMemInMCU[i]);
 367   3                              DelayMs(300);           
 368   3                      }
 369   2      
 370   2                      AUXR = 0x02;
 371   2                      for(i = 0; i< OUTER_EXTEND_MEM_SIZE ; i++)
 372   2                      {
 373   3                              outerExtendMem[i] = 128 - i;
 374   3                              LEDShowInt(outerExtendMem[i]);
 375   3                              DelayMs(300);           
 376   3                      }               
 377   2              }               
 378   1      #endif
 379   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    291    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
